#!/bin/sh

MOUNT_DIR="$HOME/mount"

function print_err() {
  err=$1
  echo "Error: $1" >&2
  echo "Enter [dumount --help] for help"
  exit 1
}

function print_help() {
  help="androidumount: A command-line tool for safely unmounting Android MTP devices from $MOUNT_DIR/<mountpoint>.

Usage:
    androidumount <mountpoint>

Arguments:
    mountpoint     The name of the mount directory inside $MOUNT_DIR (e.g., myphone).

Options:
    --help         Show this help message and exit.

Examples:
    • Unmount an Android device mounted at $MOUNT_DIR/phone:
        androidumount phone

    • Recursively unmount $MOUNT_DIR/myandroid and all nested mounts:
        androidumount myandroid

Notes:
    • This script verifies that the given path is an active mountpoint before unmounting.
    • Uses recursive unmount (-R) to handle cases with nested mounts.
    • Requires sudo access to perform the unmount operation.
"

  if type "less" > /dev/null; then
    echo "$help" | less
  else
    echo "$help"
  fi
}

if [ "$1" = "--help" ]; then
  print_help
  exit 0
fi

mountpoint=$1

if [ -z "$mountpoint" ]; then
  print_err "Mountpoint is empty"
fi

mountpoint="$MOUNT_DIR/$mountpoint"

if ! mountpoint -q "$mountpoint"; then
  print_err "$mountpoint is not a mountpoint!!"
fi

sudo umount -R "$mountpoint"
