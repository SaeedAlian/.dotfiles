#!/bin/sh

WALLPAPERS_DIR="$HOME/pictures/wallpapers/walls"
LOCKSCREENS_DIR="$HOME/pictures/wallpapers/lockscreens"
BACKGROUND_SCRIPT_PATH="$HOME/.dotfiles/scripts/.local/bin/background"
LOCKSCREEN_SCRIPT_PATH="$HOME/.dotfiles/scripts/.local/bin/start_lockscreen"

function print_help() {
  help="Usage: wallpaper [COMMAND] [OPTIONS]

Commands:
  --help, -h                     Display this help message.

  add <file_path> <wall_name>    Add a new wallpaper image to the wallpapers directory. 
                                 Converts the image to JPG if necessary, and creates 
                                 a lockscreen image for it.

  create-lockscreen <file_name>  Create a lockscreen image based on an existing wallpaper
                                 in the wallpapers directory.

  set-lockscreens                Generate lockscreen images for all wallpapers in the
                                 wallpapers directory. Prompts for confirmation.

  set <wall_name>                Set a wallpaper as the current background and update
                                 the related scripts.

  mode <background_mode>         Set the background display mode. Options are:
                                 - center
                                 - max
                                 - tile
                                 - fill

Options:
  <file_path>                    Path to the image file to be added as wallpaper.
  <wall_name>                    Name for the wallpaper image (without extension).
  <file_name>                    Name of the wallpaper file (including extension).
  <background_mode>              Display mode for the wallpaper (e.g., center, max).

Examples:
  wallpaper add /path/to/image.png new_wallpaper
  wallpaper create-lockscreen existing_wallpaper.jpg
  wallpaper set-lockscreens
  wallpaper set new_wallpaper
  wallpaper mode fill

Note:
  - Ensure the required directories and scripts exist as specified in the script.
  - This script depends on tools like 'ffmpeg', 'sed', and 'xss-lock'.
"
  
  if type "less" > /dev/null; then
    echo "$help" | less
  else
    echo "$help"
  fi
}

function print_err() {
  err=$1
  echo "$1" >&2
  echo "Enter [wallpaper --help] for help"
  exit 1
}

# converts an image to jpg and moves it into WALLPAPERS directory
add_wall_image() {
  image_path=$1
  new_image_name=$2

  if [ ! -f "$image_path" ]; then
    print_err "Error: File doesn't exists."
    exit 1
  fi

  extension=${image_path##*.}
  mimetype=$(file -b --mime-type "$image_path" | sed 's/\/.*//g')

  if [ "$mimetype" != "image" ]; then
    print_err "Error: Selected file is not an image."
    exit 1
  fi

  if [ "$extension" = "jpg" ]; then
    echo "Copying image into wallpapers directory..."
    cp "$image_path" "$WALLPAPERS_DIR/$new_image_name.jpg"
    echo "Wallpaper image is moved into wallpapers directory successfully."
  else
    echo "File is not jpg, converting to jpg..."
    ffmpeg -i "$image_path" "$WALLPAPERS_DIR/$new_image_name.jpg" -loglevel error
    echo "Wallpaper image converted into jpg, and moved into wallpapers directory successfully."
  fi
}

# selects an image inside WALLPAPERS directory and creates a lockscreen image based on it
create_lockscreen_image() {
  image_name=$1
  silent_flag=$2
  image_path=$WALLPAPERS_DIR/$image_name

  if [ ! -f "$image_path" ]; then
    print_err "Error: Wallpaper with name: $image_name doesn't exists inside wallpapers directory."
    exit 1
  fi

  extension=${image_path##*.}
  mimetype=$(file -b --mime-type "$image_path" | sed 's/\/.*//g')

  if [ "$mimetype" != "image" ] || [ "$extension" != "jpg" ]; then
    print_err "Error: Selected file $image_name is not an image or is not jpg."
    exit 1
  fi

  image_basename=${image_name%.*}

  lockscreen_path=$LOCKSCREENS_DIR/$image_basename.png

  if [ -f "$lockscreen_path" ]; then
    [ "$silent_flag" -eq 0 ] && echo "Lockscreen of image $image_name already exists."
  else
    [ "$silent_flag" -eq 0 ] && echo "Creating lockscreen image..."
    ffmpeg -i "$image_path" -vf "scale=1920:1080, boxblur=15" "$lockscreen_path" -loglevel error
    [ "$silent_flag" -eq 0 ] && echo "Lockscreen image of $image_name has been created successfully."
  fi
}

# creates lockscreen image with all the images inside the WALLPAPERS directory
# (if there is not a lockscreen image exists)
set_all_lockscreens() {
  echo "Creating lockscreen image for all wallpapers..."

  for file in "$WALLPAPERS_DIR"/*; do
    if [ -f "$file" ]; then
      file_name=${file##*/}
      create_lockscreen_image "$file_name" 1
    fi
  done

  echo "Lockscreen images have been created successfully."
}

# sets the background variable name
set_background() {
  image_name=$1
  image_path=$WALLPAPERS_DIR/$image_name.jpg

  if [ ! -f "$image_path" ]; then
    print_err "Error: Wallpaper with name: $image_name.jpg doesn't exists inside wallpapers directory."
    exit 1
  fi

  extension=${image_path##*.}
  mimetype=$(file -b --mime-type "$image_path" | sed 's/\/.*//g')

  if [ "$mimetype" != "image" ] || [ "$extension" != "jpg" ]; then
    print_err "Error: Selected file $image_name is not an image or is not jpg."
    exit 1
  fi

  sed -i "s/BGNAME=.*/\BGNAME=\"$image_name\"/" "$BACKGROUND_SCRIPT_PATH"
  sed -i "s/BGNAME=.*/\BGNAME=\"$image_name\"/" "$LOCKSCREEN_SCRIPT_PATH"

  echo "Scripts updated."
  $BACKGROUND_SCRIPT_PATH &
  pkill xss-lock
  xss-lock -l -- "$LOCKSCREEN_SCRIPT_PATH" &
  echo "Wallpaper updated successfully."
}

# sets the background mode
set_background_mode() {
  image_bg_mode=$1

  if [ "$image_bg_mode" != "center" ] && [ $image_bg_mode != "max" ] && [ $image_bg_mode != "tile" ] && [ $image_bg_mode != "fill" ]; then
    print_err "Error: Wrong option"
    exit 1
  fi

  sed -i "s/BGMODE=.*/\BGMODE=\"--bg-$image_bg_mode\"/" "$BACKGROUND_SCRIPT_PATH"

  echo "Scripts updated."
  $BACKGROUND_SCRIPT_PATH
  echo "Wallpaper updated successfully."
}

cmd=$1

case $cmd in
"--help" | "-h")
  print_help
  exit 0
  ;;
"add")
  shift 1
  file_path=$1
  wall_name=$2

  [ -z "$wall_name" ] && print_err "Wallpaper name not found"
  [ -z "$file_path" ] && print_err "File path not found"

  add_wall_image "$file_path" "$wall_name"
  create_lockscreen_image "$wall_name.jpg" 0

  exit 0
  ;;
"create-lockscreen")
  shift 1
  file_name=$1

  [ -z "$file_name" ] && print_err "File name not specified"

  create_lockscreen_image "$file_name" 0
  exit 0
  ;;
"set-lockscreens")
  printf "Are you sure that you want to set all the lockscreen images? [y/n] "
  read -r ans

  if [ "$ans" = "y" ]; then
    set_all_lockscreens
  fi

  exit 1
  ;;
"set")
  shift 1
  wall_name=$1

  [ -z "$wall_name" ] && print_err "Wallpaper name not specified"

  set_background "$wall_name"

  exit 0
  ;;
"mode")
  shift 1
  wall_mode=$1

  [ -z "$wall_mode" ] && print_err "Wallpaper mode not specified"

  set_background_mode "$wall_mode"

  exit 0
  ;;
esac

print_err "Error: Invalid command"
